name: tests

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop
      - main

jobs:
  ci:
    runs-on: ubuntu-latest

    # Define all environment variables for the job here
    env:
      DB_CONNECTION: mysql
      DB_HOST: 127.0.0.1
      DB_PORT: ${{ job.services.mariadb.ports['3306'] }}
      DB_DATABASE: testing
      DB_USERNAME: root
      DB_PASSWORD: password
      REDIS_HOST: 127.0.0.1
      REDIS_PORT: ${{ job.services.redis.ports['6379'] }}
      APP_KEY: base64:dummykeyfortestingpurposes12345= # Add a dummy key

    services:
      mariadb:
        image: mariadb:11
        ports:
          - 3306/tcp
        env:
          MYSQL_ROOT_PASSWORD: ${{ env.DB_PASSWORD }}
          MYSQL_DATABASE: ${{ env.DB_DATABASE }}
          MYSQL_ALLOW_EMPTY_PASSWORD: false
        # We can remove health checks; the wait step is more reliable
        # options: --health-cmd="mysqladmin ping -h 127.0.0.1 -u root -p${{ env.DB_PASSWORD }}" --health-interval=5s --health-timeout=5s --health-retries=10

      redis:
        image: redis
        ports:
          - 6379/tcp
        # options: --health-cmd="redis-cli ping" --health-interval=5s --health-timeout=5s --health-retries=5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.4
          tools: composer:v2
          coverage: xdebug
          extensions: mysql, redis # Add redis extension

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install Node Dependencies
        run: npm ci

      - name: Build Assets
        run: npm run build

      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      # We don't need .env files anymore since we set variables at the job level
      # - name: Copy Environment File
      #   run: cp .env.testing .env
      # - name: Generate Application Key
      #   run: php artisan key:generate

      - name: Clear caches
        run: |
          php artisan config:clear
          php artisan route:clear
          php artisan view:clear

      - name: Wait for Services
        run: sleep 15

      - name: Run Migration
        run: php artisan migrate --force -v

      - name: Tests
        run: ./vendor/bin/pest
